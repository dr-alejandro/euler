package euler;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

class Euler2Test {
//
//    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
//    By starting with 1 and 2, the first 10 terms will be:
//
//            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
//    find the sum of the even-valued terms.

    // steps to tackle this problem:
    // 1. generate fibonacci numbers until some limit
    // 2. filter for even valued terms and sum them up

    Euler2 underTest = new Euler2();

    @Test
    void getListOfFibonacciNumbersUpTo_firstFewEntries() {
        List<Integer> result = underTest.getListOfFibonacciNumbersUpTo(5);
        assertEquals(4, result.size());
        assertEquals(1, result.get(0));
        assertEquals(2, result.get(1));
        assertEquals(3, result.get(2));
        assertEquals(5, result.get(3));
    }

    @Test
    void getListOfFibonacciNumbersUpTo_forLargerEntryNonExactLimit() {
        List<Integer> result = underTest.getListOfFibonacciNumbersUpTo(90);
        assertEquals(10, result.size());
        assertEquals(89, result.get(9));
    }

    @Test
    void getListOfFibonacciNumbersUpTo_forLargerEntryExactLimit() {
        List<Integer> result = underTest.getListOfFibonacciNumbersUpTo(89);
        assertEquals(10, result.size());
        assertEquals(89, result.get(9));
    }

    @Test
    void getListOfFibonacciNumbersUpTo_forVeryLargeEntry() {
        List<Integer> result = underTest.getListOfFibonacciNumbersUpTo(4000000);
        assertEquals(32, result.size());
        assertEquals(3524578, result.get(31));
    }

    @Test
    void filterForEvenValuedTermsAndSumUp() {
        assertEquals(2, underTest.filterForEvenValuedTermsAndSumUp(Arrays.asList(1,2,3)));
        assertEquals(4, underTest.filterForEvenValuedTermsAndSumUp(Arrays.asList(2,2,3)));
        assertEquals(12, underTest.filterForEvenValuedTermsAndSumUp(Arrays.asList(4,3,3,8)));
        assertEquals(10, underTest.filterForEvenValuedTermsAndSumUp(Arrays.asList(1,2,3,5,8)));
    }

    @Test
    void solveEuler2() {
        List<Integer> fibonaccis = underTest.getListOfFibonacciNumbersUpTo(4000000);
        int result = underTest.filterForEvenValuedTermsAndSumUp(fibonaccis);
        assertEquals(4613732, result);
    }

}